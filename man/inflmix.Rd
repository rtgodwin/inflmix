% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/inflmix.R
\name{inflmix}
\alias{inflmix}
\title{Estimate the one-inflated positive Poisson mixture model (OIPPMM)}
\usage{
inflmix(y, l = NULL, p = NULL, K = NULL, tol = 1e-05,
  maxLikmethod = "nr", maxiters = 10000, minlam = 0.01, reduntol = 0.05,
  maxk = 4)
}
\arguments{
\item{y}{A vector of positive integers.}

\item{l}{lambda, a vector of starting values for the positive Poisson
components. If \code{NULL}, starting values will be found via grid search,
and mixture models with successively more components will be estimated
until the non-parametric MLE is found, or \code{maxk} is reached.}

\item{p}{pi, a vector of starting values for the mixture weights.
\code{l} and \code{p} must be initialized together, or not at all. If
\code{NULL}, grid search and estimation for successive numbers of mixture
components will commence until the non-parametric MLE is found, or \code{maxk}
is reached.}

\item{K}{the number of components to be estimated in the OIPPMM. If \code{NULL},
mixture models with successively more components will be estimated until the
non-parametric MLE is found, or \code{maxk} is reached.}

\item{tol}{Tolerance of the EM algorithm. The EM algorithm proceeds until the
proportional difference between all successive parameter estimates for
lambda and pi are less than \code{tol}. Default is 0.001\%.}

\item{maxLikmethod}{Maximization method passed to \pkg{maxLik}. Default is
Newton-Raphson.}

\item{maxiters}{Maximum number of EM iterations.}

\item{minlam}{The minimum value that a mixture component can have before it
is considered to be a redundant one-inflating component. If any value in
lambda is less than \code{minlam}, the algorithm stops and the
non-parametric MLE is declared to be found. Only relevant if \code{l} and
\code{p} are \code{NULL}, so that \code{inflmix} is searching for the
non-parametric MLE.}

\item{reduntol}{After the EM algorithm converges, the estimation process will
begin again (including a grid search for new starting values), unless any
two components in lambda are within \code{reduntol} of each other.
The non-parametric MLE is then declared to be found.  Only relevant if
\code{l} and \code{p} are \code{NULL}.}

\item{maxk}{The maximum number of positive Poisson components to be attempted
in the search for the non-parametric MLE.}
}
\value{
If \code{inflmix} is called with starting values for \code{l} and
  \code{p}, returns a list containing:
  \tabular{ll}{
  \code{termreas} \tab the reason that the EM algorithm terminated (either
  convergence or iteration limit) \cr
  \code{iterations} \tab the number of iterations until convergence \cr
  \code{lambda} \tab the estimated values for the positive Poisson parameters \cr
  \code{pi} \tab the estimated values for the component weights \cr
  \code{logl} \tab the value of the log-likelihood function evaluated at the
  parameter estimates for lambda and pi \cr
  \code{n} \tab the sample size, the length of the vector \code{y} \cr
  \code{predicted} \tab the predicted counts obtained by evaluting the
  probability mass function of the OIPPMM model at the parameter estimates for
  lambda and pi, and for \eqn{y = 1,\dots,max(y)} \cr
  \code{chisq} \tab the Pearson chi-square distance statistic obtained by
  comparing the actual and predicted counts \cr
  \code{HTn0} \tab the Horvitz-Thompson estimator for the number of missing
  zeros \cr
  }
  If \code{inflmix} is called without starting values for \code{l} and
  \code{p} (\code{l=NULL} and \code{p=NULL}), then \code{inflmix} returns an
  object of class 'inflmixNPMLE', a list containing each of the above objects,
  for each estimated OIPPMM model with successively more mixture components,
  in the search for the non-parametric MLE. An additional object is also provided:
  \code{termreasNPMLE} which documents the reason for the termination of the search
  for the NPMLE (either NPMLE found, or \code{maxk} reached).
}
\description{
Estimate the one-inflated positive Poisson mixture model (OIPPMM)
}
\examples{
# Estimate several OIPPMMs with increasing number of components, until adding an
# additional component yields no improvement in the log-likelihood.
zz <- inflmix(1:20)
# The custom print method displays results in table
zz
# Provide starting values instead of searching for the NPMLE
inflmix(1:20, l=c(1, 4), p=c(.4, .4))
# Fix the number of components, without providing starting values
inflmix(1:20, K = 2)
}
\seealso{
\code{\link{rinflmix}} and \code{\link{rinflmixN}} for the generation of
  random numbers from the OIPPMM.
}
